class Solution {
public:
    int dfs(vector<vector<int>>& grid,int row,int col)
    {
        if(row<0 ||  row==grid.size() || col<0 ||  col==grid[0].size() || grid[row][col]==0)
        {
            return 0;
        }
        int sum=grid[row][col];
        grid[row][col]=0;

        vector<vector<int>> dirs={{-1,0},{1,0},{0,-1},{0,1}};

        for(auto& ele : dirs)
        {
            int nr=row+ele[0];
            int nc=col+ele[1];
            sum+=dfs(grid,nr,nc);
        }
        return sum;
    }
    int findMaxFish(vector<vector<int>>& grid) {
        int n=grid.size();
        int m=grid[0].size();
        int ans=0;
        
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(grid[i][j]>0)
                {
                    ans=max(ans,dfs(grid,i,j));
                }

            }
        }
        return  ans;
    }
};
