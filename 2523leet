class Solution {
public:

    bool primechecker(int n) {
        if (n < 2) {
            return false;
        }
        for (int j = 2; j <= sqrt(n); j++) {
            if (n % j == 0) {
                return false;
            }
        }
        return true;
    }

    vector<int> closestPrimes(int left, int right) {
        vector<int> prime;
        vector<int> final;

        for (int i = left; i <= right; i++) {
            if (primechecker(i)) {
                prime.push_back(i);
            }
        }

        if (prime.size() < 2) {
            return {-1, -1};
        }

        int dist = INT_MAX;

        for (int i = 0; i < prime.size() - 1; i++) {
            if (prime[i + 1] - prime[i] < dist) {
                dist = prime[i + 1] - prime[i];
                final.clear();
                final.push_back(prime[i]);
                final.push_back(prime[i + 1]);
            }
        }

        return final;
    }
};
