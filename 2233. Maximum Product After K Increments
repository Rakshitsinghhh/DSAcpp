class Solution {
public:
    int maximumProduct(vector<int>& nums, int k) {
        priority_queue<int, vector<int>, greater<int>> minHeap;

        for(int i = 0; i < nums.size(); i++){
            minHeap.push(nums[i]);
        }

        while(k != 0){
            int ele = minHeap.top();
            minHeap.pop();
            ele++;
            minHeap.push(ele); 
            k--;
        }

        long long ans = 1;
        long long MOD = 1e9 + 7;
        while(!minHeap.empty()){
            ans = (ans * minHeap.top()) % MOD;
            minHeap.pop();
        }

        return ans;
    }
};
